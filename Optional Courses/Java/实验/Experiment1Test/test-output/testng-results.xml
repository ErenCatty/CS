<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-05-16T11:03:02Z" name="All Test Suite" finished-at="2021-05-16T11:03:04Z" duration-ms="1252">
    <groups>
    </groups>
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="34">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@1198b989]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@7ff95560]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testTestToString" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testGetContent" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testSetContent" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@527e5409]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@2cbb3d47]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testWriteObject" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@74ad1f1f]" started-at="2021-05-16T11:03:02Z" name="testReadObject" data-provider="testTerm" finished-at="2021-05-16T11:03:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@365185bd]" started-at="2021-05-16T11:03:02Z" name="testTestToString" data-provider="testTermTuple" finished-at="2021-05-16T11:03:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TermTuple:term=Search,freq=1,curPos=100.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2ddc8ecb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@365185bd]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1fe20588]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@365185bd]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6973bf95]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@365185bd]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6ce139a4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="12">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5ccddd20]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@96def03]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1ed1993a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6e0dec4a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestToString" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@794cb805]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1f3f4916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testSetDocId" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=20, freq=0, positions=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testGetPositions" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testGetDocId" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testGetFreq" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testSetFreq" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=0, freq=8, positions=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testSort" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testCompareTo" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@56528192]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testSetPositions" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=0, freq=0, positions=[100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testWriteObject" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@43a0cee9]" started-at="2021-05-16T11:03:02Z" name="testReadObject" data-provider="testPosting" finished-at="2021-05-16T11:03:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting:docId=1, freq=4, positions=[10, 100, 320, 400].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="10">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testTestToString" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@769f71a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testTestAdd" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testAdd" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@22a637e7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testTestRemove" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49b0b76]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testIndexOf" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@659a969b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@35047d03]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testGet" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1d119efb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testContains" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6fe7aac8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testRemove" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@76908cc0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testSort" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=2, freq=4, positions=[5, 7, 8, 9]., Posting:docId=3, freq=2, positions=[10, 11]., Posting:docId=4, freq=4, positions=[1, 2, 3, 4].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@2473d930]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testClear" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[].]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testWriteObject" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testSize" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="testReadObject" data-provider="testPostingList" finished-at="2021-05-16T11:03:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=1, freq=4, positions=[1, 2, 3, 4]., Posting:docId=2, freq=2, positions=[5, 6].].]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testSetDocPath" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/2.txt', tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetDocPath" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetDocId" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testSetDocId" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=2, docPath='null', tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple:term=bbb,freq=1,curPos=30.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetTuple" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testAddTuple" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple:term=aaa,freq=1,curPos=17.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testTestToString" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5bd03f44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testGetTuples" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@5204062d]" started-at="2021-05-16T11:03:02Z" name="testContains" data-provider="testDocument" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt', tuples=[TermTuple:term=aaa,freq=1,curPos=17., TermTuple:term=bbb,freq=1,curPos=30.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple:term=aaa,freq=1,curPos=17.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2021-05-16T11:03:02Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@fe18270]" started-at="2021-05-16T11:03:02Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@a9cd3b1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@fe18270]" started-at="2021-05-16T11:03:02Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2021-05-16T11:03:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@57c758ac]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=0., TermTuple:term=bbb,freq=1,curPos=1., TermTuple:term=ccc,freq=1,curPos=2., TermTuple:term=ddd,freq=1,curPos=3., TermTuple:term=is,freq=1,curPos=4., TermTuple:term=f17,freq=1,curPos=5., TermTuple:term=2020,freq=1,curPos=6., TermTuple:term=ab,freq=1,curPos=7., TermTuple:term=ababababababababababab,freq=1,curPos=8.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2021-05-16T11:03:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="6">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@281e3708]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@48ae9b55]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=0., TermTuple:term=bbb,freq=1,curPos=1., TermTuple:term=ccc,freq=1,curPos=2., TermTuple:term=ddd,freq=1,curPos=3., TermTuple:term=f17,freq=1,curPos=4., TermTuple:term=2020,freq=1,curPos=5., TermTuple:term=ab,freq=1,curPos=6., TermTuple:term=ababababababababababab,freq=1,curPos=7.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@281e3708]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@21de60b4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@281e3708]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@1700915]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=0., TermTuple:term=bbb,freq=1,curPos=1., TermTuple:term=ccc,freq=1,curPos=3., TermTuple:term=ddd,freq=1,curPos=4., TermTuple:term=f17,freq=1,curPos=6., TermTuple:term=2020,freq=1,curPos=7., TermTuple:term=ab,freq=1,curPos=8., TermTuple:term=ababababababababababab,freq=1,curPos=10.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@6d3af739]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@1ddf84b8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=0., TermTuple:term=bbb,freq=1,curPos=2., TermTuple:term=ab,freq=1,curPos=3., TermTuple:term=ccc,freq=1,curPos=4., TermTuple:term=ddd,freq=1,curPos=5., TermTuple:term=ababababababababababab,freq=1,curPos=7.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@6d3af739]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@1139b2f3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@15b3e5b]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@6ca8564a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@15b3e5b]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@1817d444]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=0., TermTuple:term=bbb,freq=1,curPos=1., TermTuple:term=ccc,freq=1,curPos=3., TermTuple:term=ddd,freq=1,curPos=4., TermTuple:term=f17,freq=1,curPos=5., TermTuple:term=2020,freq=1,curPos=6.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="2">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@7dc222ae]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@4facf68f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=aaa,freq=1,curPos=1., TermTuple:term=bbb,freq=1,curPos=2., TermTuple:term=ccc,freq=1,curPos=4., TermTuple:term=ddd,freq=1,curPos=6.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@7dc222ae]" started-at="2021-05-16T11:03:03Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@76508ed1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="556">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=i,freq=1,curPos=8., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=hahahahahahahahahahahahah,freq=1,curPos=12., TermTuple:term=ha,freq=1,curPos=13., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=26%,freq=1,curPos=3., TermTuple:term=u571,freq=1,curPos=4., TermTuple:term=because,freq=1,curPos=5., TermTuple:term=hence,freq=1,curPos=6., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@15bfd87]" started-at="2021-05-16T11:03:03Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="218">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testTestToString" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@550a1967]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testAddDocument" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@66fdec9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=1, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt', tuples=[TermTuple:term=activity,freq=1,curPos=0., TermTuple:term=destination,freq=1,curPos=1., TermTuple:term=emergency,freq=1,curPos=2., TermTuple:term=capital,freq=1,curPos=7., TermTuple:term=frozen,freq=1,curPos=9., TermTuple:term=benefits,freq=1,curPos=10., TermTuple:term=google,freq=1,curPos=11., TermTuple:term=frozen,freq=1,curPos=14., TermTuple:term=google,freq=1,curPos=15.]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testLoad" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="12" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testSave" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testSearch" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].].]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testGetDictionary" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testWriteObject" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testReadObject" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/Users/zycyz/Desktop/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testOptimize" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@133e16fd]" started-at="2021-05-16T11:03:03Z" name="testGetDocName" data-provider="testIndex" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@57abad67]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="46">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@140e5a13]" started-at="2021-05-16T11:03:03Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=C:\Users\zycyz\Desktop\Experiment1Test\test\text\1.txt, 1=C:\Users\zycyz\Desktop\Experiment1Test\test\text\2.txt, 2=C:\Users\zycyz\Desktop\Experiment1Test\test\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Index:
docIdToDocPath:
{0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}, 
termToPostingList:
{activity=PostingList:list=[Posting:docId=0, freq=3, positions=[0, 1, 6]., Posting:docId=1, freq=1, positions=[0].]., benefits=PostingList:list=[Posting:docId=0, freq=2, positions=[2, 7]., Posting:docId=1, freq=1, positions=[10].]., capital=PostingList:list=[Posting:docId=0, freq=2, positions=[3, 8]., Posting:docId=1, freq=1, positions=[7].]., destination=PostingList:list=[Posting:docId=0, freq=2, positions=[4, 9]., Posting:docId=1, freq=1, positions=[1].]., emergency=PostingList:list=[Posting:docId=0, freq=1, positions=[10]., Posting:docId=1, freq=1, positions=[2].]., fizzy=PostingList:list=[Posting:docId=0, freq=1, positions=[5].]., frozen=PostingList:list=[Posting:docId=1, freq=2, positions=[9, 14].]., google=PostingList:list=[Posting:docId=1, freq=2, positions=[11, 15].]., marketplace=PostingList:list=[Posting:docId=2, freq=1, positions=[0].]., medical=PostingList:list=[Posting:docId=2, freq=1, positions=[1].]., notification=PostingList:list=[Posting:docId=2, freq=1, positions=[3].]., peninsula=PostingList:list=[Posting:docId=2, freq=1, positions=[5].]., pollution=PostingList:list=[Posting:docId=2, freq=1, positions=[7].].}.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2021-05-16T11:03:03Z" duration-ms="46">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetDocId" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetDocPath" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetContent" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='new content1', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testSetContent" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='new content2', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetScore" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testSetScore" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=1, docPath='D:\IdeaWorkspace\SeachEngine\text\2.txt', content='activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google', termPostingMapping={activity=Posting:docId=1, freq=1, positions=[0].}, score=-1.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testTestToString" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Hit:docId=0, docPath='D:\IdeaWorkspace\SeachEngine\text\1.txt', content='activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism', termPostingMapping={activity=Posting:docId=0, freq=3, positions=[0, 1, 6].}, score=-3.0.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@70a36a66]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@f4168b8]" started-at="2021-05-16T11:03:03Z" name="testCompareTo" data-provider="testHit" finished-at="2021-05-16T11:03:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@35a9782c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2021-05-16T11:03:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2021-05-16T11:03:04Z" duration-ms="98">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@548ad73b]" started-at="2021-05-16T11:03:02Z" name="beforeSuite" finished-at="2021-05-16T11:03:02Z" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@166fa74d]" started-at="2021-05-16T11:03:04Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T11:03:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@56a4479a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@62163b39]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@166fa74d]" started-at="2021-05-16T11:03:04Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T11:03:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@20a8a64e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@62f4ff3b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@166fa74d]" started-at="2021-05-16T11:03:04Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2021-05-16T11:03:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@1698fc68]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@4504d271]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
